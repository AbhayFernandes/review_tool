name: Publish Artifacts

on:
  push:
    branches:
      - release

jobs:
  publish-docker-api:
    permissions: write-all
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Docker registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Docker Image for API service
        run: docker build -t ghcr.io/abhayfernandes/api:latest -f ./cmd/api/Dockerfile .
      - name: Push API Docker image
        run: docker push ghcr.io/abhayfernandes/api:latest

      - name: Build Web Docker image
        run: docker build -t ghcr.io/abhayfernandes/web:latest -f ./web/Dockerfile .
      - name: Push Web Docker image
        run: docker push ghcr.io/abhayfernandes/web:latest

  publish-docker-job-processor:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Docker registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Job Processor Docker image
        run: docker build -t ghcr.io/abhayfernandes/job-processor:latest -f ./cmd/job-processor/Dockerfile .
      - name: Push Job Processor Docker image
        run: docker push ghcr.io/abhayfernandes/job-processor:latest
        
  publish-docker-web:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Docker registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build Web Docker image
        run: docker build -t ghcr.io/abhayfernandes/web:latest -f ./web/Dockerfile .
      - name: Push Web Docker image
        run: docker push ghcr.io/abhayfernandes/web:latest

  create-release:
    runs-on: ubuntu-latest
    permissions: write-all
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get previous tag
        id: previousTag
        run: |
          name=$(git --no-pager tag --sort=creatordate --merged ${{ github.ref_name }} | tail -2 | head -1)
          echo "previousTag: $name"
          echo "previousTag=$name" >> $GITHUB_ENV

      - name: Get Next Version
        id: semver
        uses: ietf-tools/semver-action@v1.8.0
        with:
          token: ${{ github.token }}
          branch: main
          noVersionBumpBehavior: current

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.semver.outputs.next }}
          release_name: Release ${{ steps.semver.outputs.next }}
          draft: false
          prerelease: false 

      - name: Generate CHANGELOG
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ github.token }}
          fromTag: ${{ steps.semver.outputs.next }}
          toTag: ${{ env.previousTag }}
          writeToFile: false

      - name: Update release with changelog
        uses: mini-bomba/create-github-release@v1.2.0
        with:
          tag: ${{ steps.semver.outputs.next }}
          token: ${{ secrets.GITHUB_TOKEN }}
          body: ${{ steps.changelog.outputs.changes }}


  publish-linux-cli:
    runs-on: ubuntu-latest
    permissions: write-all
    needs: create-release
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23

      - name: Check out repository
        uses: actions/checkout@v4

      - name: Build CLI release
        run: make build-cli-release

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./build/crev
          asset_name: crev-linux
          asset_content_type: application/octet-stream

  publish-macos-cli:
    runs-on: macos-latest
    permissions: write-all
    needs: create-release
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23

      - name: Check out repository
        uses: actions/checkout@v4

      - name: Build CLI release
        run: make build-cli-release

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./build/crev
          asset_name: crev-macos
          asset_content_type: application/octet-stream

  publish-windows-cli:
    runs-on: windows-latest
    permissions: write-all
    needs: create-release
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23

      - name: Check out repository
        uses: actions/checkout@v4

      - name: Build CLI release
        run: make build-cli-release

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./build/crev
          asset_name: crev-windows
          asset_content_type: application/octet-stream

